import { Component } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { MatDialogRef, MatDialogModule } from '@angular/material/dialog';
import { MatFormFieldModule } from '@angular/material/form-field';
import { MatInputModule } from '@angular/material/input';
import { MatButtonModule } from '@angular/material/button';
import { MatSelectModule } from '@angular/material/select';
import { Student } from '../../../core/services/data.service';
import { UtilsService } from '../../../core/services/utils.service';
import { SUBJECTS } from '../../../core/constants/app.constants';

@Component({
  selector: 'app-add-student-dialog',
  standalone: true,
  imports: [
    CommonModule,
    FormsModule,
    MatDialogModule,
    MatFormFieldModule,
    MatInputModule,
    MatButtonModule,
    MatSelectModule
  ],
  templateUrl: './add-student-dialog.component.html',
  styleUrls: ['./add-student-dialog.component.scss']
})
export class AddStudentDialogComponent {
  student: Partial<Student> = {
    id: '',
    name: '',
    date: '',
    grade: 0,
    subject: '',
    email: '',
    dateJoined: '',
    address: '',
    city: '',
    country: '',
    zip: ''
  };

  subjects = SUBJECTS;

  constructor(
    public dialogRef: MatDialogRef<AddStudentDialogComponent>,
    private utilsService: UtilsService
  ) {
    // Initialize dates using utility service
    this.student.date = this.utilsService.formatDate(new Date());
    this.student.dateJoined = this.utilsService.formatDate(new Date());
  }



  onCancel(): void {
    this.dialogRef.close();
  }

  onSave(): void {
    if (this.isFormValid()) {
      // Remove the ID field since it will be auto-generated by the service
      const { id, ...studentData } = this.student;
      this.dialogRef.close(studentData);
    }
  }

  isFormValid(): boolean {
    return !!(this.student.name && this.student.subject && this.student.grade && this.student.grade > 0 && this.student.grade <= 100);
  }
} 