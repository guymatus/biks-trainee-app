import { Component } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { MatDialogRef, MatDialogModule } from '@angular/material/dialog';
import { MatFormFieldModule } from '@angular/material/form-field';
import { MatInputModule } from '@angular/material/input';
import { MatButtonModule } from '@angular/material/button';
import { MatSelectModule } from '@angular/material/select';
import { Student } from '../../../core/services/data.service';

@Component({
  selector: 'app-add-student-dialog',
  standalone: true,
  imports: [
    CommonModule,
    FormsModule,
    MatDialogModule,
    MatFormFieldModule,
    MatInputModule,
    MatButtonModule,
    MatSelectModule
  ],
  templateUrl: './add-student-dialog.component.html',
  styleUrls: ['./add-student-dialog.component.scss']
})
export class AddStudentDialogComponent {
  student: Partial<Student> = {
    id: '',
    name: '',
    date: this.formatDateForInput(new Date()),
    grade: 0,
    subject: '',
    email: '',
    dateJoined: this.formatDateForInput(new Date()),
    address: '',
    city: '',
    country: '',
    zip: ''
  };

  subjects = [
    'Algebra',
    'Physics',
    'Chemistry',
    'Biology',
    'Calculus',
    'Statistics',
    'Computer Science',
    'English',
    'History',
    'Geography',
    'Literature',
    'Economics',
    'Psychology',
    'Sociology',
    'Philosophy',
    'Political Science',
    'Art History',
    'Music Theory',
    'Drama',
    'Film Studies',
    'Linguistics',
    'Anthropology',
    'Archaeology',
    'Astronomy',
    'Meteorology',
    'Oceanography',
    'Geology',
    'Botany'
  ];

  constructor(
    public dialogRef: MatDialogRef<AddStudentDialogComponent>
  ) {}

  private formatDateForInput(date: Date): string {
    const day = date.getDate().toString().padStart(2, '0');
    const month = (date.getMonth() + 1).toString().padStart(2, '0');
    const year = date.getFullYear();
    return `${day}/${month}/${year}`;
  }

  onCancel(): void {
    this.dialogRef.close();
  }

  onSave(): void {
    if (this.isFormValid()) {
      // Remove the ID field since it will be auto-generated by the service
      const { id, ...studentData } = this.student;
      this.dialogRef.close(studentData);
    }
  }

  isFormValid(): boolean {
    return !!(this.student.name && this.student.subject && this.student.grade && this.student.grade > 0);
  }
} 